// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.26.1
// source: api.proto

package api

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubmitStrategy int32

const (
	SubmitStrategy_P_UKNOWN                SubmitStrategy = 0
	SubmitStrategy_P_SUBMIT_ALL            SubmitStrategy = 1
	SubmitStrategy_P_ABORT_ON_FIRST_ERROR  SubmitStrategy = 2
	SubmitStrategy_P_WAIT_FOR_CONFIRMATION SubmitStrategy = 3
)

// Enum value maps for SubmitStrategy.
var (
	SubmitStrategy_name = map[int32]string{
		0: "P_UKNOWN",
		1: "P_SUBMIT_ALL",
		2: "P_ABORT_ON_FIRST_ERROR",
		3: "P_WAIT_FOR_CONFIRMATION",
	}
	SubmitStrategy_value = map[string]int32{
		"P_UKNOWN":                0,
		"P_SUBMIT_ALL":            1,
		"P_ABORT_ON_FIRST_ERROR":  2,
		"P_WAIT_FOR_CONFIRMATION": 3,
	}
)

func (x SubmitStrategy) Enum() *SubmitStrategy {
	p := new(SubmitStrategy)
	*p = x
	return p
}

func (x SubmitStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SubmitStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (SubmitStrategy) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x SubmitStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SubmitStrategy.Descriptor instead.
func (SubmitStrategy) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type PostSubmitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction            *TransactionMessage `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	SkipPreFlight          bool                `protobuf:"varint,2,opt,name=skipPreFlight,proto3" json:"skipPreFlight,omitempty"`
	FrontRunningProtection *bool               `protobuf:"varint,3,opt,name=frontRunningProtection,proto3,oneof" json:"frontRunningProtection,omitempty"`
	Tip                    *uint64             `protobuf:"varint,4,opt,name=tip,proto3,oneof" json:"tip,omitempty"`
	UseStakedRPCs          *bool               `protobuf:"varint,6,opt,name=useStakedRPCs,proto3,oneof" json:"useStakedRPCs,omitempty"`
	FastBestEffort         *bool               `protobuf:"varint,7,opt,name=fastBestEffort,proto3,oneof" json:"fastBestEffort,omitempty"`
}

func (x *PostSubmitRequest) Reset() {
	*x = PostSubmitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitRequest) ProtoMessage() {}

func (x *PostSubmitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitRequest.ProtoReflect.Descriptor instead.
func (*PostSubmitRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *PostSubmitRequest) GetTransaction() *TransactionMessage {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *PostSubmitRequest) GetSkipPreFlight() bool {
	if x != nil {
		return x.SkipPreFlight
	}
	return false
}

func (x *PostSubmitRequest) GetFrontRunningProtection() bool {
	if x != nil && x.FrontRunningProtection != nil {
		return *x.FrontRunningProtection
	}
	return false
}

func (x *PostSubmitRequest) GetTip() uint64 {
	if x != nil && x.Tip != nil {
		return *x.Tip
	}
	return 0
}

func (x *PostSubmitRequest) GetUseStakedRPCs() bool {
	if x != nil && x.UseStakedRPCs != nil {
		return *x.UseStakedRPCs
	}
	return false
}

func (x *PostSubmitRequest) GetFastBestEffort() bool {
	if x != nil && x.FastBestEffort != nil {
		return *x.FastBestEffort
	}
	return false
}

type PostSubmitRequestEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction   *TransactionMessage `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	SkipPreFlight bool                `protobuf:"varint,2,opt,name=skipPreFlight,proto3" json:"skipPreFlight,omitempty"`
}

func (x *PostSubmitRequestEntry) Reset() {
	*x = PostSubmitRequestEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitRequestEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitRequestEntry) ProtoMessage() {}

func (x *PostSubmitRequestEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitRequestEntry.ProtoReflect.Descriptor instead.
func (*PostSubmitRequestEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *PostSubmitRequestEntry) GetTransaction() *TransactionMessage {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *PostSubmitRequestEntry) GetSkipPreFlight() bool {
	if x != nil {
		return x.SkipPreFlight
	}
	return false
}

type PostSubmitBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries                []*PostSubmitRequestEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	SubmitStrategy         SubmitStrategy            `protobuf:"varint,2,opt,name=submitStrategy,proto3,enum=api.SubmitStrategy" json:"submitStrategy,omitempty"`
	UseBundle              *bool                     `protobuf:"varint,3,opt,name=useBundle,proto3,oneof" json:"useBundle,omitempty"`
	FrontRunningProtection *bool                     `protobuf:"varint,4,opt,name=frontRunningProtection,proto3,oneof" json:"frontRunningProtection,omitempty"`
}

func (x *PostSubmitBatchRequest) Reset() {
	*x = PostSubmitBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitBatchRequest) ProtoMessage() {}

func (x *PostSubmitBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitBatchRequest.ProtoReflect.Descriptor instead.
func (*PostSubmitBatchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *PostSubmitBatchRequest) GetEntries() []*PostSubmitRequestEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *PostSubmitBatchRequest) GetSubmitStrategy() SubmitStrategy {
	if x != nil {
		return x.SubmitStrategy
	}
	return SubmitStrategy_P_UKNOWN
}

func (x *PostSubmitBatchRequest) GetUseBundle() bool {
	if x != nil && x.UseBundle != nil {
		return *x.UseBundle
	}
	return false
}

func (x *PostSubmitBatchRequest) GetFrontRunningProtection() bool {
	if x != nil && x.FrontRunningProtection != nil {
		return *x.FrontRunningProtection
	}
	return false
}

type PostSubmitBatchResponseEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Error     string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Submitted bool   `protobuf:"varint,3,opt,name=submitted,proto3" json:"submitted,omitempty"`
}

func (x *PostSubmitBatchResponseEntry) Reset() {
	*x = PostSubmitBatchResponseEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitBatchResponseEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitBatchResponseEntry) ProtoMessage() {}

func (x *PostSubmitBatchResponseEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitBatchResponseEntry.ProtoReflect.Descriptor instead.
func (*PostSubmitBatchResponseEntry) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *PostSubmitBatchResponseEntry) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *PostSubmitBatchResponseEntry) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *PostSubmitBatchResponseEntry) GetSubmitted() bool {
	if x != nil {
		return x.Submitted
	}
	return false
}

type PostSubmitBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*PostSubmitBatchResponseEntry `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *PostSubmitBatchResponse) Reset() {
	*x = PostSubmitBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitBatchResponse) ProtoMessage() {}

func (x *PostSubmitBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitBatchResponse.ProtoReflect.Descriptor instead.
func (*PostSubmitBatchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *PostSubmitBatchResponse) GetTransactions() []*PostSubmitBatchResponseEntry {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type PostSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *PostSubmitResponse) Reset() {
	*x = PostSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostSubmitResponse) ProtoMessage() {}

func (x *PostSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostSubmitResponse.ProtoReflect.Descriptor instead.
func (*PostSubmitResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *PostSubmitResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type TransactionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	IsCleanup bool   `protobuf:"varint,2,opt,name=isCleanup,proto3" json:"isCleanup,omitempty"`
}

func (x *TransactionMessage) Reset() {
	*x = TransactionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMessage) ProtoMessage() {}

func (x *TransactionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMessage.ProtoReflect.Descriptor instead.
func (*TransactionMessage) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *TransactionMessage) GetIsCleanup() bool {
	if x != nil {
		return x.IsCleanup
	}
	return false
}

type TransactionMessageV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *TransactionMessageV2) Reset() {
	*x = TransactionMessageV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionMessageV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionMessageV2) ProtoMessage() {}

func (x *TransactionMessageV2) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionMessageV2.ProtoReflect.Descriptor instead.
func (*TransactionMessageV2) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionMessageV2) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e,
	0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xed, 0x02, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x50, 0x72, 0x65,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x6b,
	0x69, 0x70, 0x50, 0x72, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3b, 0x0a, 0x16, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x16, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x74, 0x69, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x01, 0x52, 0x03, 0x74, 0x69, 0x70, 0x88, 0x01, 0x01, 0x12,
	0x29, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52, 0x50, 0x43, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x6b, 0x65, 0x64, 0x52, 0x50, 0x43, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0e, 0x66, 0x61,
	0x73, 0x74, 0x42, 0x65, 0x73, 0x74, 0x45, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x03, 0x52, 0x0e, 0x66, 0x61, 0x73, 0x74, 0x42, 0x65, 0x73, 0x74, 0x45, 0x66,
	0x66, 0x6f, 0x72, 0x74, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x66, 0x72, 0x6f, 0x6e,
	0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x74, 0x69, 0x70, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x75,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x64, 0x52, 0x50, 0x43, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x66, 0x61, 0x73, 0x74, 0x42, 0x65, 0x73, 0x74, 0x45, 0x66, 0x66, 0x6f, 0x72, 0x74, 0x22,
	0x7e, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6b, 0x69,
	0x70, 0x50, 0x72, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0d, 0x73, 0x6b, 0x69, 0x70, 0x50, 0x72, 0x65, 0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x95, 0x02, 0x0a, 0x16, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x0e,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x21,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x09, 0x75, 0x73, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x3b, 0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x16, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x75, 0x73, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x42, 0x19, 0x0a, 0x17,
	0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x70, 0x0a, 0x1c, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x22, 0x60, 0x0a, 0x17, 0x50, 0x6f, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x12, 0x50,
	0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22,
	0x4c, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x75, 0x70, 0x22, 0x30, 0x0a,
	0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x56, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a,
	0x69, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x5f, 0x55, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x5f, 0x53, 0x55, 0x42, 0x4d, 0x49, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x5f, 0x4f, 0x4e, 0x5f,
	0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x50, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x32, 0xcb, 0x03, 0x0a, 0x03, 0x41,
	0x70, 0x69, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x56, 0x32, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x92, 0x41, 0x44, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x0a, 0x09, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12, 0x12, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x1a,
	0x1c, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x20, 0x61, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x64, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0xc6, 0x01, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x56, 0x32, 0x12, 0x1b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x76, 0x92, 0x41, 0x54, 0x0a, 0x05, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x0a, 0x09, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x12, 0x18,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x1a, 0x26, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x73, 0x20, 0x61, 0x20, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x6f, 0x66, 0x20, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x20, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x32, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x2d, 0x62, 0x61, 0x74, 0x63, 0x68, 0x1a,
	0x57, 0x92, 0x41, 0x54, 0x1a, 0x52, 0x0a, 0x1a, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x20, 0x41, 0x50, 0x49, 0x20, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x62, 0x6c, 0x6f, 0x78,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x67, 0x69, 0x74, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x69, 0x6f,
	0x2f, 0x73, 0x65, 0x72, 0x75, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x62, 0x6f, 0x75, 0x74,
	0x2f, 0x77, 0x65, 0x6c, 0x63, 0x6f, 0x6d, 0x65, 0x42, 0xea, 0x02, 0x92, 0x41, 0xcc, 0x02, 0x12,
	0xec, 0x01, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x12, 0x69,
	0x45, 0x61, 0x73, 0x79, 0x2d, 0x74, 0x6f, 0x2d, 0x75, 0x73, 0x65, 0x20, 0x41, 0x50, 0x49, 0x20,
	0x66, 0x6f, 0x72, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x20, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x53, 0x6f, 0x6c, 0x61,
	0x6e, 0x61, 0x20, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2c, 0x20, 0x70,
	0x6f, 0x77, 0x65, 0x72, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x62, 0x6c, 0x6f, 0x58, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x20, 0x4c, 0x61, 0x62, 0x73, 0x2e, 0x22, 0x6e, 0x0a, 0x27, 0x62, 0x6c, 0x6f,
	0x58, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x20, 0x4c, 0x61, 0x62, 0x73, 0x20, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x20, 0x41, 0x50, 0x49, 0x20, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x64, 0x6f,
	0x63, 0x73, 0x2e, 0x62, 0x6c, 0x6f, 0x78, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x61,
	0x70, 0x69, 0x1a, 0x15, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x40, 0x62, 0x6c, 0x6f, 0x78,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x03, 0x31, 0x2e, 0x36, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x5a, 0x24, 0x0a, 0x22, 0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x20, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x12, 0x13, 0x08, 0x02, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x11, 0x0a, 0x0f, 0x0a, 0x0b, 0x41, 0x75,
	0x74, 0x68, 0x20, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x00, 0x5a, 0x18, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_api_proto_goTypes = []interface{}{
	(SubmitStrategy)(0),                  // 0: api.SubmitStrategy
	(*PostSubmitRequest)(nil),            // 1: api.PostSubmitRequest
	(*PostSubmitRequestEntry)(nil),       // 2: api.PostSubmitRequestEntry
	(*PostSubmitBatchRequest)(nil),       // 3: api.PostSubmitBatchRequest
	(*PostSubmitBatchResponseEntry)(nil), // 4: api.PostSubmitBatchResponseEntry
	(*PostSubmitBatchResponse)(nil),      // 5: api.PostSubmitBatchResponse
	(*PostSubmitResponse)(nil),           // 6: api.PostSubmitResponse
	(*TransactionMessage)(nil),           // 7: api.TransactionMessage
	(*TransactionMessageV2)(nil),         // 8: api.TransactionMessageV2
}
var file_api_proto_depIdxs = []int32{
	7, // 0: api.PostSubmitRequest.transaction:type_name -> api.TransactionMessage
	7, // 1: api.PostSubmitRequestEntry.transaction:type_name -> api.TransactionMessage
	2, // 2: api.PostSubmitBatchRequest.entries:type_name -> api.PostSubmitRequestEntry
	0, // 3: api.PostSubmitBatchRequest.submitStrategy:type_name -> api.SubmitStrategy
	4, // 4: api.PostSubmitBatchResponse.transactions:type_name -> api.PostSubmitBatchResponseEntry
	1, // 5: api.Api.PostSubmitV2:input_type -> api.PostSubmitRequest
	3, // 6: api.Api.PostSubmitBatchV2:input_type -> api.PostSubmitBatchRequest
	6, // 7: api.Api.PostSubmitV2:output_type -> api.PostSubmitResponse
	5, // 8: api.Api.PostSubmitBatchV2:output_type -> api.PostSubmitBatchResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitRequestEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitBatchResponseEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionMessageV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
